{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/todoapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const getLocalData = () => {\n    const lists = localStorage.getItem(\"mytodolist\");\n\n    if (lists) {\n      return JSON.parse(lists);\n    } else {\n      return [];\n    }\n  };\n\n  const [inputData, setInputData] = useState();\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n\n  const addItem = e => {\n    if (e.keyCode === 13) {\n      if (!inputData) {\n        alert(\"input field is empty\");\n      } else {\n        const allInputData = {\n          id: new Date().getTime().toString(),\n          name: inputData\n        };\n        setItems([...items, allInputData]);\n        setInputData(\"\");\n      }\n    }\n  };\n\n  const deleteItem = index => {\n    const updateditem = items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateditem);\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n    setInputData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" ToDo List \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Items\",\n          value: inputData,\n          onChange: e => {\n            setInputData(e.target.value);\n          },\n          onKeyUp: addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"select edit item into list\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: items.map((elem, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo_style\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-times\",\n                \"aria-hidden\": \"true\",\n                onClick: () => {\n                  deleteItem(elem.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-edit\",\n                \"aria-hidden\": \"true\",\n                onClick: () => {\n                  editItem(elem.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: elem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 11\n              }, this)]\n            }, elem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ni8cm4XbRuKEhBdxqFIQz6EXZW8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/todoapp/src/App.js"],"names":["React","useState","useEffect","App","getLocalData","lists","localStorage","getItem","JSON","parse","inputData","setInputData","items","setItems","isEditItem","setIsEditItem","addItem","e","keyCode","alert","allInputData","id","Date","getTime","toString","name","deleteItem","index","updateditem","filter","elem","editItem","newEditItem","find","setItem","stringify","target","value","map","ind"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst App =() =>{\n  \n  const getLocalData = () => {\n const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\n  \n  \n  const [inputData, setInputData] = useState();\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  \n  \n  const addItem =(e) =>{\n    if(e.keyCode === 13){\n      if(!inputData){\n        alert(\"input field is empty\");\n      }\n      else{\n   const allInputData = {id: new Date().getTime().toString(), name : inputData };\n    setItems([...items, allInputData ]);\n    setInputData(\"\");\n      }\n      \n    }\n  }\n  \n  const deleteItem =(index) =>{\n   const updateditem= items.filter((elem)=>{\n      return index !== elem.id;\n    });\n    setItems(updateditem);\n  }\n  \n  \n const editItem = (id) =>{\n   let newEditItem = items.find((elem)=>{\n     return elem.id === id;\n     \n   });\n   setInputData(newEditItem.name);\n   \n   setIsEditItem(id);\n }\n  \n  \n  \n  \n\n    useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  }, [items]);\n  \n  return (\n  <>\n<div className=\"main_div\">\n  <div className=\"center_div\">\n        <br />\n        <h1> ToDo List </h1>\n        <br />\n        <input \n        type=\"text\" \n        placeholder=\"Add a Items\"\n        value={inputData}\n        onChange={(e)=>{setInputData(e.target.value)}} onKeyUp={addItem} />\n      \n    <button title=\"select edit item into list\">+</button>\n      <ol>\n        {items.map((elem, ind)=>{\n          return (\n          <div className=\"todo_style\" key={elem.id}>\n      <i class=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>{deleteItem(elem.id)}}></i>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\"onClick={()=>{editItem(elem.id)}}></i>\n          <li>{elem.name}</li>\n          </div>\n          )\n        })}\n      </ol>\n    \n        \n  \n</div>\n</div>\n    \n  </>\n    \n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}